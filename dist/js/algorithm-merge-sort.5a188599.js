(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["algorithm-merge-sort"],{"0d03":function(e,t,r){var n=r("6eeb"),a=Date.prototype,i="Invalid Date",o="toString",l=a[o],c=a.getTime;new Date(NaN)+""!=i&&n(a,o,(function(){var e=c.call(this);return e===e?l.call(this):i}))},"0d1a":function(e,t,r){},7446:function(e,t,r){"use strict";r.r(t);var n=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"merge"},[r("Title",[e._v("归并算法")]),r("el-tabs",{staticClass:"merge-tabs",model:{value:e.activeName,callback:function(t){e.activeName=t},expression:"activeName"}},[r("el-tab-pane",{attrs:{label:"原生归并",name:"nativeMerge"}},[r("el-button",{attrs:{type:"primary"},on:{click:e.testNativeEfficiency}},[e._v(" 执行原生归并算法 ")])],1),r("el-tab-pane",{attrs:{label:"改进归并",name:"upgrademerge"}},[r("el-button",{attrs:{type:"primary"},on:{click:e.testUpgradeEfficiency}},[e._v(" 执行原生归并算法 ")])],1)],1),r("codemirror",{staticStyle:{height:"600px"},attrs:{value:e.JsCode,readonly:""}})],1)},a=[],i=(r("99af"),r("fb6a"),r("0d03"),r("d3b7"),{data:function(){return{activeName:"nativeMerge",JsCode:"",nativeMerge:"原生归并：\n// 将大数组转化为多个小数组直到其中只有一个项\nfunction mergeSort (array, compareFn = defaultCompare) {\n  if (array.length > 1) {\n    const { length } = array\n    const middle = Math.floor(length / 2)\n    const left = mergeSort(array.slice(0, middle), compareFn)\n    const right = mergeSort(array.slice(middle, length), compareFn)\n    array = merge(left, right, compareFn)\n  }\n  return array\n}\n// 合并数组\nfunction merge (left, right, compareFn) {\n  let i = 0\n  let j = 0\n  const result = []\n  while (i < left.length && j < right.length) {\n    result.push(\n      compareFn(left[i], right[j]) === 'Compare.LESS_THAN' ? left[i++] : right[j++]\n    )\n  }\n  return result.concat(i < left.length ? left.slice(i) : right.slice(j))\n}",upgrademerge:"改进归并：\nfunction MergeSort (array, compareFn = defaultCompare) {\n  const { length } = array\n  for (let i = 0; i < length; i++) {\n    for (let j = 0; j < length - 1 - i; j++) {\n      if (compareFn(array[j], array[j + 1]) === 'Compare.BIGGER_THAN') {\n        swap(array, j, j + 1)\n      }\n    }\n  }\n}"}},watch:{activeName:{handler:function(){"nativeMerge"===this.activeName?this.JsCode=this.nativeMerge:"upgrademerge"===this.activeName&&(this.JsCode=this.upgrademerge)},immediate:!0}},methods:{testNativeEfficiency:function(){var e=this.randomNumber(),t=(new Date).getTime();e=this.mergeSort(e,this.defaultCompare);var r=(new Date).getTime();this.JsCode=this.JsCode+"\n归并排序算法耗时："+(r-t)+"ms",console.log(e)},testUpgradeEfficiency:function(){var e=this.randomNumber(),t=(new Date).getTime();this.upgradeMergeSort(e,this.defaultCompare);var r=(new Date).getTime();this.JsCode=this.JsCode+"\n归并排序算法耗时："+(r-t)+"ms",console.log(e)},mergeSort:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.defaultCompare;if(e.length>1){var r=e,n=r.length,a=Math.floor(n/2),i=this.mergeSort(e.slice(0,a),t),o=this.mergeSort(e.slice(a,n),t);e=this.merge(i,o,t)}return e},merge:function(e,t,r){var n=0,a=0,i=[];while(n<e.length&&a<t.length)i.push("Compare.LESS_THAN"===r(e[n],t[a])?e[n++]:t[a++]);return i.concat(n<e.length?e.slice(n):t.slice(a))},upgradeMergeSort:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.defaultCompare;if(e.length>1){var r=e,n=r.length,a=Math.floor(n/2),i=this.mergeSort(e.slice(0,a),t),o=this.mergeSort(e.slice(a,n),t);e=this.upgradeMerge(i,o,t)}return e},upgradeMerge:function(e,t,r){var n=0,a=0,i=[];if(e[e.length]<=t[0])return i.concat(e).concat(t);if(e[0]>=t[t.length])return i.concat(t).concat(e);while(n<e.length&&a<t.length)i.push("Compare.LESS_THAN"===r(e[n],t[a])?e[n++]:t[a++]);return i.concat(n<e.length?e.slice(n):t.slice(a))},defaultCompare:function(e,t){return e<t?"Compare.LESS_THAN":"Compare.BIGGER_THAN"},swap:function(e,t,r){var n=[e[r],e[t]];e[t]=n[0],e[r]=n[1]},randomNumber:function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e6,r=0;r<t;r++)e.push(Math.floor(Math.random()*t)+1);return e}},components:{Title:function(){return r.e("components-title").then(r.bind(null,"6968"))}}}),o=i,l=(r("a0b4"),r("2877")),c=Object(l["a"])(o,n,a,!1,null,null,null);t["default"]=c.exports},a0b4:function(e,t,r){"use strict";var n=r("0d1a"),a=r.n(n);a.a},fb6a:function(e,t,r){"use strict";var n=r("23e7"),a=r("861d"),i=r("e8b5"),o=r("23cb"),l=r("50c4"),c=r("fc6a"),s=r("8418"),g=r("1dde"),h=r("b622"),u=h("species"),m=[].slice,f=Math.max;n({target:"Array",proto:!0,forced:!g("slice")},{slice:function(e,t){var r,n,g,h=c(this),d=l(h.length),p=o(e,d),v=o(void 0===t?d:t,d);if(i(h)&&(r=h.constructor,"function"!=typeof r||r!==Array&&!i(r.prototype)?a(r)&&(r=r[u],null===r&&(r=void 0)):r=void 0,r===Array||void 0===r))return m.call(h,p,v);for(n=new(void 0===r?Array:r)(f(v-p,0)),g=0;p<v;p++,g++)p in h&&s(n,g,h[p]);return n.length=g,n}})}}]);
//# sourceMappingURL=algorithm-merge-sort.5a188599.js.map