(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["algorithm-quick-sort"],{"032d":function(t,i,e){"use strict";var n=e("d0ca"),r=e.n(n);r.a},"0d03":function(t,i,e){var n=e("6eeb"),r=Date.prototype,a="Invalid Date",l="toString",o=r[l],u=r.getTime;new Date(NaN)+""!=a&&n(r,l,(function(){var t=u.call(this);return t===t?o.call(this):a}))},"95f8":function(t,i,e){"use strict";e.r(i);var n=function(){var t=this,i=t.$createElement,e=t._self._c||i;return e("div",{staticClass:"quick"},[e("Title",[t._v("快排算法")]),e("el-tabs",{staticClass:"quick-tabs",model:{value:t.activeName,callback:function(i){t.activeName=i},expression:"activeName"}},[e("el-tab-pane",{attrs:{label:"单路快排",name:"singleQuick"}},[e("el-button",{attrs:{type:"primary"},on:{click:t.testSingleQuick}},[t._v(" 执行原生快排算法 ")])],1),e("el-tab-pane",{attrs:{label:"改进单路快排",name:"upgradeSinglequick"}},[e("el-button",{attrs:{type:"primary"},on:{click:t.testUpgradeSinglequick}},[t._v(" 执行原生快排算法 ")])],1),e("el-tab-pane",{attrs:{label:"双路快排",name:"doublequick"}},[e("el-button",{attrs:{type:"primary"},on:{click:t.testDoubleQuickSort}},[t._v(" 执行双路快排算法 ")])],1),e("el-tab-pane",{attrs:{label:"三路快排",name:"triplequick"}},[e("el-button",{attrs:{type:"primary"},on:{click:t.testTripleQuickquickSort}},[t._v(" 执行三路快排算法 ")])],1)],1),e("codemirror",{staticStyle:{height:"600px"},attrs:{value:t.JsCode,readonly:""}})],1)},r=[],a=(e("99af"),e("a434"),e("0d03"),e("d3b7"),{data:function(){return{activeName:"singleQuick",JsCode:"",singleQuick:"单路快排：\n// 单路快排算法\nfunction quickSort (arr) {\n  if (arr.length <= 1) return arr\n  pivotIndex = Math.floor(arr.length / 2)\n  let pivot = arr.splice(pivotIndex, 1)[0]\n  let left = []\n  let right = []\n  for (var i = 0; i < arr.length; i++){\n    if (arr[i] < pivot) {\n      left.push(arr[i])\n    } else {\n      right.push(arr[i])\n    }\n  }\n  return quickSort(left).concat([pivot], quickSort(right))\n}",upgradeSinglequick:"改进单路快排：\nfunction quickSort(array, left, right) {\n  if (left < right) {\n    let i = left\n    let j = right\n    let pivot = array[left]\n    while (i < j) {\n      while (array[j] > pivot) {\n        j--\n      }\n      if (i < j) {\n        array[i++] = array[j]\n      }\n      while (array[i] < pivot) {\n        i++\n      }\n      if (i < j) {\n        array[j--] = array[i]\n      }\n    }\n    array[i] = pivot\n    quickSort(array, left, i - 1)\n    quickSort(array, i + 1, right)\n  }\n  return array\n}",doublequick:"\n// 主方法\nfunction quickSort (array) {\n  return quick(array, 0, array.length - 1)\n}\n// 递归函数\nfunction quick (array, left, right) {\n  let index = partition(array, left, right)\n  if (left < index - 1) {\n    quick(array, left, index - 1)\n  }\n  if (right > index + 1) {\n    quick(array, index + 1, right)\n  }\n  return array\n}\n// 划分过程\nfunction partition (array, left, right) {\n  const pivot = array[left]\n  let i = left + 1\n  let j = right\n  while (i <= j) {\n    while (array[i] < pivot) {\n      i++\n    }\n    while (array[j] > pivot) {\n      j--\n    }\n    if (i <= j) {\n      swap(array, i, j)\n      i++\n      j--\n    }\n  }\n  swap(array, left, j)\n  return j\n}",triplequick:"\n// 主方法\nfunction quickSort (array) {\n  return quick(array, 0, array.length - 1)\n}\n// 递归函数\nfunction quick (array, left, right) {\n  let random = Math.floor(Math.random()*(right - left + 1) + left)\n  swap(array, left, random)\n  const pivot = array[left]\n  let i = left + 1\n  let gt = right + 1\n  let lt = left\n  while (i < gt) {\n    if (array[i] < pivot) {\n      swap(array, i++, lt + 1)\n      lt ++\n    } else if (array[i] > pivot) {\n      swap(array, i, gt - 1)\n      gt--\n    } else {\n      i++\n    }\n  }\n  swap(array, left, lt)\n  if (left < lt - 1) {\n    quick(array, left, lt - 1)\n  }\n  if (right > lt + 1) {\n    quick(array, gt, right)\n  }\n  return array\n}\n// 交换方法\nfunction swap (array, a, b) {\n  [array[a], array[b]] = [array[b], array[a]]\n}"}},watch:{activeName:{handler:function(){"singleQuick"===this.activeName?this.JsCode=this.singleQuick:"upgradeSinglequick"===this.activeName?this.JsCode=this.upgradeSinglequick:"doublequick"===this.activeName?this.JsCode=this.doublequick:"triplequick"===this.activeName&&(this.JsCode=this.triplequick)},immediate:!0}},methods:{testSingleQuick:function(){var t=this.randomNumber(),i=(new Date).getTime();t=this.singleQuickSort(t);var e=(new Date).getTime();this.JsCode=this.JsCode+"\n快排排序算法耗时："+(e-i)+"ms",console.log(t)},testUpgradeSinglequick:function(){var t=this.randomNumber(),i=(new Date).getTime();this.upgradeSingleQuickSort(t,0,t.length-1);var e=(new Date).getTime();this.JsCode=this.JsCode+"\n快排排序算法耗时："+(e-i)+"ms",console.log(t)},testDoubleQuickSort:function(){var t=this.randomNumber(),i=(new Date).getTime();this.doubleQuickSort(t);var e=(new Date).getTime();this.JsCode=this.JsCode+"\n快排排序算法耗时："+(e-i)+"ms",console.log(t)},testTripleQuickquickSort:function(){var t=this.randomNumber(),i=(new Date).getTime();this.tripleQuickquickSort(t);var e=(new Date).getTime();this.JsCode=this.JsCode+"\n快排排序算法耗时："+(e-i)+"ms",console.log(t)},singleQuickSort:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];if(t.length<=1)return t;for(var i=Math.floor(t.length/2),e=t.splice(i,1)[0],n=[],r=[],a=0;a<t.length;a++)t[a]<e?n.push(t[a]):r.push(t[a]);return this.singleQuickSort(n).concat([e],this.singleQuickSort(r))},upgradeSingleQuickSort:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],i=arguments.length>1?arguments[1]:void 0,e=arguments.length>2?arguments[2]:void 0;if(i<e){var n=i,r=e,a=t[i];while(n<r){while(t[r]>a)r--;n<r&&(t[n++]=t[r]);while(t[n]<a)n++;n<r&&(t[r--]=t[n])}t[n]=a,this.upgradeSingleQuickSort(t,i,n-1),this.upgradeSingleQuickSort(t,n+1,e)}return t},doubleQuickSort:function(t){return this.doubleQuick(t,0,t.length-1)},doubleQuick:function(t,i,e){var n=this.partition(t,i,e);return i<n-1&&this.doubleQuick(t,i,n-1),e>n+1&&this.doubleQuick(t,n+1,e),t},partition:function(t,i,e){var n=t[i],r=i+1,a=e;while(r<=a){while(t[r]<n)r++;while(t[a]>n)a--;r<=a&&(this.swap(t,r,a),r++,a--)}return this.swap(t,i,a),a},tripleQuickquickSort:function(t){return this.tripleQuick(t,0,t.length-1)},tripleQuick:function(t,i,e){var n=Math.floor(Math.random()*(e-i+1)+i);this.swap2(t,i,n);var r=t[i],a=i+1,l=e+1,o=i;while(a<l)t[a]<r?(this.swap2(t,a++,o+1),o++):t[a]>r?(this.swap2(t,a,l-1),l--):a++;return this.swap2(t,i,o),i<o-1&&this.tripleQuick(t,i,o-1),e>o+1&&this.tripleQuick(t,l,e),t},swap2:function(t,i,e){var n=[t[e],t[i]];t[i]=n[0],t[e]=n[1]},defaultCompare:function(t,i){return t<i?"Compare.LESS_THAN":"Compare.BIGGER_THAN"},swap:function(t,i,e){var n=[t[e],t[i]];t[i]=n[0],t[e]=n[1]},randomNumber:function(){for(var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e6,e=0;e<i;e++)t.push(Math.floor(Math.random()*i)+1);return t}},components:{Title:function(){return e.e("components-title").then(e.bind(null,"6968"))}}}),l=a,o=(e("032d"),e("2877")),u=Object(o["a"])(l,n,r,!1,null,null,null);i["default"]=u.exports},a434:function(t,i,e){"use strict";var n=e("23e7"),r=e("23cb"),a=e("a691"),l=e("50c4"),o=e("7b0b"),u=e("65f0"),c=e("8418"),s=e("1dde"),h=Math.max,f=Math.min,p=9007199254740991,g="Maximum allowed length exceeded";n({target:"Array",proto:!0,forced:!s("splice")},{splice:function(t,i){var e,n,s,d,k,v,m=o(this),y=l(m.length),w=r(t,y),b=arguments.length;if(0===b?e=n=0:1===b?(e=0,n=y-w):(e=b-2,n=f(h(a(i),0),y-w)),y+e-n>p)throw TypeError(g);for(s=u(m,n),d=0;d<n;d++)k=w+d,k in m&&c(s,d,m[k]);if(s.length=n,e<n){for(d=w;d<y-n;d++)k=d+n,v=d+e,k in m?m[v]=m[k]:delete m[v];for(d=y;d>y-n+e;d--)delete m[d-1]}else if(e>n)for(d=y-n;d>w;d--)k=d+n-1,v=d+e-1,k in m?m[v]=m[k]:delete m[v];for(d=0;d<e;d++)m[d+w]=arguments[d+2];return m.length=y-n+e,s}})},d0ca:function(t,i,e){}}]);
//# sourceMappingURL=algorithm-quick-sort.72e22ca2.js.map